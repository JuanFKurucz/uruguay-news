name: Deploy to Google Cloud Functions and GitHub Pages

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/deploy.yml'
  pull_request:
    branches: [main]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/deploy.yml'

env:
  GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
  GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        working-directory: ./backend
        run: |
          uv sync --extra dev

      - name: Run linting
        working-directory: ./backend
        run: |
          uv run ruff check .
          uv run ruff format --check .

      - name: Run YAML linting
        working-directory: ./backend
        run: |
          uv run yamllint ../.github/workflows/ ../mkdocs.yml

      - name: Run type checking
        working-directory: ./backend
        run: |
          uv run mypy .

      - name: Run tests
        working-directory: ./backend
        run: |
          uv run pytest tests/ -v --cov=src/uruguay_news --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/coverage.xml
          flags: backend
          name: backend-coverage

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "./frontend/web/package-lock.json"

      - name: Install dependencies
        working-directory: ./frontend/web
        run: npm ci

      - name: Run linting
        working-directory: ./frontend/web
        run: npm run lint

      - name: Run type checking
        working-directory: ./frontend/web
        run: npm run type-check

      - name: Run tests
        working-directory: ./frontend/web
        run: npm test -- --coverage --watchAll=false

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./frontend/web/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  deploy-backend:
    name: Deploy Backend to Cloud Functions
    needs: test-backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Cloud Functions
        working-directory: ./backend
        run: |
          gcloud functions deploy uruguay-news-api \
            --gen2 \
            --runtime=python311 \
            --region=us-central1 \
            --source=. \
            --entry-point=main \
            --trigger-http \
            --allow-unauthenticated \
            --memory=512MB \
            --timeout=60s \
            --set-env-vars="ENVIRONMENT=production"

  deploy-frontend:
    name: Deploy Frontend to GitHub Pages
    needs: test-frontend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "./frontend/web/package-lock.json"

      - name: Install dependencies
        working-directory: ./frontend/web
        run: npm ci

      - name: Build application
        working-directory: ./frontend/web
        run: npm run build
        env:
          REACT_APP_API_URL: https://us-central1-${{ secrets.GOOGLE_CLOUD_PROJECT }}.cloudfunctions.net/uruguay-news-api
          REACT_APP_ENVIRONMENT: production

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend/web/build
          cname: uruguay-news.your-domain.com


